var c=(r,t,e)=>{if(!t.has(r))throw TypeError("Cannot "+e)},s=(r,t,e)=>(c(r,t,"read from private field"),e?e.call(r):t.get(r)),h=(r,t,e,a)=>(c(r,t,"write to private field"),a?a.call(r,e):t.set(r,e),e);var n;class DatePicker{constructor(){n.set(this,void 0);this.monthData=["January","February","March","April","May","June","July","August","September","October","November","December"],h(this,n,{data:void 0,date:0,month:0,year:0}),this.selectedDate={data:void 0,date:0,month:0,year:0},this.initCalendarDate(),this.assignElement(),this.initDateInput(),this.addEvent()}initCalendarDate(){const t=new Date,e=t.getDate(),a=t.getMonth()+1,l=t.getFullYear();h(this,n,{data:t,date:e,month:a,year:l})}assignElement(){this.datePickerEl=document.getElementById("date-picker"),this.datePickerEl&&(this.dateInputEl=this.datePickerEl.querySelector("#date-input"),this.calendarEl=this.datePickerEl.querySelector("#calendar"),this.calendarMonthEl=this.datePickerEl.querySelector("#month"),this.calendarMonthEl&&(this.monthContentEl=this.calendarMonthEl.querySelector("#content"),this.nextBtnEl=this.calendarMonthEl.querySelector("#next"),this.prevBtnEl=this.calendarMonthEl.querySelector("#prev")),this.calendarDatesEl=this.datePickerEl.querySelector("#dates"))}addEvent(){this.dateInputEl?.addEventListener("click",this.toggleCalendar.bind(this)),this.nextBtnEl?.addEventListener("click",this.moveToNextMonth.bind(this)),this.prevBtnEl?.addEventListener("click",this.moveToPrevMonth.bind(this)),this.calendarDatesEl?.addEventListener("click",this.onClickSelectDate.bind(this)),document.addEventListener("click",this.closeCalendar.bind(this))}updateDateInput(t,e,a){this.dateInputEl&&(this.dateInputEl.textContent=`${t}/${this.formateNumber(e)}/${this.formateNumber(a)}`,this.dateInputEl.dataset.value=String(new Date(t,e-1,a)))}initDateInput(){const{year:t,month:e,date:a}=s(this,n);this.updateDateInput(t,e,a)}changeCalendarDateByDataInput(){if(this.dateInputEl?.dataset.value){const t=new Date(this.dateInputEl.dataset.value);h(this,n,{data:t,year:t.getFullYear(),month:t.getMonth()+1,date:t.getDate()})}}updateCalendar(){this.updateMonth(),this.updateDates(),this.markToday(),this.markSelectedDate()}toggleCalendar(){this.changeCalendarDateByDataInput(),this.calendarEl?.classList.toggle("active"),this.updateCalendar()}closeCalendar(t){const e=t.target,a=!(e?.closest("#calendar")||e?.closest("#date-input"));this.calendarEl?.classList.contains("active")&&a&&this.calendarEl?.classList.remove("active")}updateMonth(){const{year:t,month:e,date:a}=s(this,n);this.monthContentEl&&(this.monthContentEl.textContent=`${t} ${this.monthData[e-1]} ${a}`)}updateDates(){if(this.calendarDatesEl){this.calendarDatesEl.innerHTML="";const{year:t,month:e}=s(this,n),a=new DocumentFragment,l=new Date(t,e,0).getDate();for(let i=0;i<l;i++){const d=document.createElement("div");d.classList.add("date"),d.textContent=`${i+1}`,d.dataset.date=`${i+1}`,i==0&&(d.style.gridColumnStart=`${new Date(t,e-1,1).getDay()+1}`),a.appendChild(d)}this.calendarDatesEl.appendChild(a),this.colorWeekend()}}colorWeekend(){const{year:t,month:e}=s(this,n),a=new Date(t,e-1,1).getDay();if(this.calendarDatesEl){const l=this.calendarDatesEl.querySelectorAll(`.date:nth-child(7n + ${7-a})`),i=this.calendarDatesEl.querySelectorAll(`.date:nth-child(7n+${8-a} )`);l.forEach(d=>d.style.color="blue"),i.forEach(d=>d.style.color="red")}}markToday(){const t=new Date,e=t.getFullYear(),a=t.getMonth()+1,l=t.getDate(),{year:i,month:d}=s(this,n);e===i&&a===d&&this.calendarDatesEl?.querySelector(`[data-date="${l}"]`)?.classList.add("today")}moveToNextMonth(){s(this,n).month++,s(this,n).month>12&&(s(this,n).year++,s(this,n).month=1),this.updateCalendar()}moveToPrevMonth(){s(this,n).month--,s(this,n).month<1&&(s(this,n).year--,s(this,n).month=12),this.updateCalendar()}onClickSelectDate(t){const e=t.target;if(e?.dataset.date){this.calendarDatesEl?.querySelector(".selected")?.classList.remove("selected"),e.classList.add("selected");const a=Number(e.dataset.date),{year:l,month:i}=s(this,n);this.selectedDate={data:new Date(l,i-1,a),year:l,month:i,date:a},this.updateDateInput(l,i,a)}}markSelectedDate(){this.selectedDate.year===s(this,n).year&&this.selectedDate.month===s(this,n).month&&this.calendarDatesEl?.querySelector(`[data-date="${this.selectedDate.date}"]`)?.classList.add("selected")}formateNumber(t){let e=t;return e<10?e=`0${e}`:e=t.toString(),e}}n=new WeakMap,new DatePicker;
