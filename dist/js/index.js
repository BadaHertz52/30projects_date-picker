var u=Object.defineProperty;var E=(l,t,e)=>t in l?u(l,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):l[t]=e;var r=(l,t,e)=>(E(l,typeof t!="symbol"?t+"":t,e),e),o=(l,t,e)=>{if(!t.has(l))throw TypeError("Cannot "+e)},s=(l,t,e)=>(o(l,t,"read from private field"),e?e.call(l):t.get(l)),h=(l,t,e,a)=>(o(l,t,"write to private field"),a?a.call(l,e):t.set(l,e),e);var n;class DatePicker{constructor(){r(this,"monthData",["January","February","March","April","May","June","July","August","September","October","November","December"]);n.set(this,{data:"",date:0,month:0,year:0});r(this,"datePickerEl");r(this,"dateInputEl");r(this,"calendarEl");r(this,"calendarMonthEl");r(this,"monthContentEl");r(this,"nextBtnEl");r(this,"prevBtnEl");r(this,"calendarDatesEl");r(this,"selectedDate",{data:"",date:0,month:0,year:0});this.initCalendarDate(),this.assignElement(),this.initDateInput(),this.addEvent()}initCalendarDate(){const t=new Date,e=t.getDate(),a=t.getMonth()+1,i=t.getFullYear();h(this,n,{data:t,date:e,month:a,year:i})}assignElement(){this.datePickerEl=document.getElementById("date-picker"),this.dateInputEl=this.datePickerEl.querySelector("#date-input"),this.calendarEl=this.datePickerEl.querySelector("#calendar"),this.calendarMonthEl=this.datePickerEl.querySelector("#month"),this.monthContentEl=this.calendarMonthEl.querySelector("#content"),this.nextBtnEl=this.calendarMonthEl.querySelector("#next"),this.prevBtnEl=this.calendarMonthEl.querySelector("#prev"),this.calendarDatesEl=this.datePickerEl.querySelector("#dates")}addEvent(){this.dateInputEl.addEventListener("click",this.toggleCalendar.bind(this)),this.nextBtnEl.addEventListener("click",this.moveToNextMonth.bind(this)),this.prevBtnEl.addEventListener("click",this.moveToPrevMonth.bind(this)),this.calendarDatesEl.addEventListener("click",this.onClickSelectDate.bind(this)),document.addEventListener("click",(t=>{this.closeCalendar(t)}).bind(this))}updateDateInput(t,e,a){this.dateInputEl.textContent=`${t}/${this.formateNumber(e)}/${this.formateNumber(a)}`,this.dateInputEl.dataset.value=new Date(t,e-1,a)}initDateInput(){const{year:t,month:e,date:a}=s(this,n);this.updateDateInput(t,e,a)}changeCalendarDateByDataInput(){const t=new Date(this.dateInputEl.dataset.value);h(this,n,{data:t,year:t.getFullYear(),month:t.getMonth()+1,date:t.getDate()})}updateCalendar(){this.updateMonth(),this.updateDates(),this.markToday(),this.markSelectedDate()}toggleCalendar(){this.changeCalendarDateByDataInput(),this.calendarEl.classList.toggle("active"),this.updateCalendar()}closeCalendar(t){const e=t.target,a=!(e?.closest("#calendar")||e?.closest("#date-input"));this.calendarEl.classList.contains("active")&&a&&this.calendarEl.classList.remove("active")}updateMonth(){const{year:t,month:e,date:a}=s(this,n);this.monthContentEl.textContent=`${t} ${this.monthData[e-1]} ${a}`}updateDates(){this.calendarDatesEl.innerHTML="";const{year:t,month:e}=s(this,n),a=new DocumentFragment,i=new Date(t,e-1,0).getDate();for(let d=0;d<i;d++){const c=document.createElement("div");c.classList.add("date"),c.textContent=d+1,c.dataset.date=d+1,a.appendChild(c)}a.firstChild.style.gridColumnStart=new Date(t,e-1,1).getDay()+1,this.calendarDatesEl.appendChild(a),this.colorWeekend()}colorWeekend(){const{year:t,month:e}=s(this,n),a=new Date(t,e-1,1).getDay(),i=this.calendarDatesEl.querySelectorAll(`.date:nth-child(7n + ${7-a})`),d=this.calendarDatesEl.querySelectorAll(`.date:nth-child(7n+${8-a} )`);i.forEach(c=>c.style.color="blue"),d.forEach(c=>c.style.color="red")}markToday(){const t=new Date,e=t.getFullYear(),a=t.getMonth()+1,i=t.getDate(),{year:d,month:c}=s(this,n);e===d&&a===c&&this.calendarDatesEl.querySelector(`[data-date="${i}"]`).classList.add("today")}moveToNextMonth(){s(this,n).month++,s(this,n).month>12&&(s(this,n).year++,s(this,n).month=1),this.updateCalendar()}moveToPrevMonth(){s(this,n).month--,s(this,n).month<1&&(s(this,n).year--,s(this,n).month=12),this.updateCalendar()}onClickSelectDate(t){const e=t.target;if(e.dataset.date){this.calendarDatesEl.querySelector(".selected")?.classList.remove("selected"),e.classList.add("selected");const a=e.dataset.date,{year:i,month:d}=s(this,n);this.selectedDate={data:new Date(i,d-1,a),year:i,month:d,date:a},this.updateDateInput(i,d,a)}}markSelectedDate(){this.selectedDate.year===s(this,n).year&&this.selectedDate.month===s(this,n).month&&this.calendarDatesEl.querySelector(`[data-date="${this.selectedDate.date}"]`).classList.add("selected")}formateNumber(t){let e=t;return e<10?e=`0${e}`:e=t.toString(),e}}n=new WeakMap,new DatePicker;
